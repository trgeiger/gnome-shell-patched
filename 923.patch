From c599ec7a9b06cf30788d95f88bee54df306f2588 Mon Sep 17 00:00:00 2001
From: Daniel van Vugt <daniel.van.vugt@canonical.com>
Date: Thu, 9 Jan 2020 16:55:05 +0800
Subject: [PATCH] js/ui: Keep refcounts to WallClock objects above 1.

Because if you let them bounce between 1 and 2 then they will trigger
toggle references every time the object's properties change (maybe every
second). Even if you're not subscribed to `notify::clock` but subscribed
to `notify::timezone` then it's still a problem as the ref/unreffing
happens within the GObject notify logic, even if the subscription detail
means you don't get those callbacks.

Now because the toggle references on `WallClock` objects are not toggling
down any more, they won't queue the "big hammer" garbage collection to run
every 10 seconds (gjs@e9e96955). And CPU spikes from that regular garbage
collection (which also caused visible stutter sometimes) are avoided.

Closes: https://gitlab.gnome.org/GNOME/gnome-shell/issues/2085

https://gitlab.gnome.org/GNOME/gnome-shell/merge_requests/923
---
 js/ui/background.js | 12 +++++++++++-
 js/ui/dateMenu.js   | 19 ++++++++++++++++++-
 2 files changed, 29 insertions(+), 2 deletions(-)

diff --git a/js/ui/background.js b/js/ui/background.js
index ddae0de873..7eee0030dc 100644
--- a/js/ui/background.js
+++ b/js/ui/background.js
@@ -243,6 +243,13 @@ var Background = GObject.registerClass({
         this.isLoaded = false;
 
         this._clock = new GnomeDesktop.WallClock();
+        /*
+         * Extra _clock.ref() is required to stop toggle references from
+         * triggering garbage collection every time the clock emits a tick,
+         * even though that's a notify::clock and not a notify::timezone.
+         * The reference still toggles internally within Glib.
+         */
+        this._clock.ref();
         this._timezoneChangedId = this._clock.connect('notify::timezone',
             () => {
                 if (this._animation)
@@ -278,7 +285,10 @@ var Background = GObject.registerClass({
             this._clock.disconnect(this._timezoneChangedId);
         this._timezoneChangedId = 0;
 
-        this._clock = null;
+        if (this._clock) {
+            this._clock.unref();
+            this._clock = null;
+        }
 
         if (this._prepareForSleepId != 0)
             LoginManager.getLoginManager().disconnect(this._prepareForSleepId);
diff --git a/js/ui/dateMenu.js b/js/ui/dateMenu.js
index c6c1b5bb5a..c994f3b68c 100644
--- a/js/ui/dateMenu.js
+++ b/js/ui/dateMenu.js
@@ -637,13 +637,30 @@ class DateMenuButton extends PanelMenu.Button {
         // Done with hbox for calendar and event list
 
         this._clock = new GnomeDesktop.WallClock();
+        /*
+         * Extra _clock.ref() is required to stop toggle references from
+         * triggering garbage collection every time the clock emits a tick.
+         */
+        this._clock.ref();
         this._clock.bind_property('clock', this._clockDisplay, 'text', GObject.BindingFlags.SYNC_CREATE);
-        this._clock.connect('notify::timezone', this._updateTimeZone.bind(this));
+        this._timezoneChangedId = this._clock.connect('notify::timezone', this._updateTimeZone.bind(this));
 
         Main.sessionMode.connect('updated', this._sessionUpdated.bind(this));
         this._sessionUpdated();
     }
 
+    destroy() {
+        if (this._timezoneChangedId) {
+            this._clock.disconnect(this._timezoneChangedId);
+            this._timezoneChangedId = 0;
+        }
+
+        if (this._clock) {
+            this._clock.unref();
+            this._clock = null;
+        }
+    }
+
     _getEventSource() {
         return new Calendar.DBusEventSource();
     }
-- 
GitLab

